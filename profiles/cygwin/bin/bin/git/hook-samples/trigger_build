#!/bin/sh

GIT_DIR=$(git rev-parse --git-dir 2>/dev/null)
if [ -z "$GIT_DIR" ]; then
  echo >&2 "fatal: $0: GIT_DIR not set"
  exit 1
fi

base_url=$(git config --get hooks.teamcity.baseurl)
user=$(git config --get hooks.teamcity.user)
password=$(git config --get hooks.teamcity.password)
build_ids="$(git config --get hooks.teamcity.buildids)"

build_id_count=$(wc --words <<< "$build_ids")
if [ $build_id_count -lt 1 ]; then
  echo >&2 "fatal: $0: No build IDs to trigger. Please configure them in the server repository using \`git config hooks.teamcity.buildids '<space-separated list of build IDs>'\`"
  exit 1
fi

trigger_build()
{
  newrev=$(git rev-parse --short $1)
  refname="$2"

  if [ "$newrev" = "0000000" ]; then
    echo "Skipped triggering build for $refname because the new rev is $newrev"
    return
  fi

  for build_id in $build_ids
  do
    echo "Triggering build ID $build_id for $refname ($newrev)"

    if [ "$refname" = "refs/heads/develop" ]; then
      # Default branch.
      branch_name=
    else
      # All other branches need a logical branch name.
      branch_name="branchName=\"${refname/refs\/heads\/feature\//}\""
    fi

    post_data="<build $branch_name><buildType id=\"$build_id\" /><comment><text>Triggered by post-receive script for $newrev</text></comment></build>"

    curl --silent --fail --user $user:$password --header 'Content-Type: application/xml' --data-binary "$post_data" $base_url/httpAuth/app/rest/buildQueue > /dev/null
    if [ $? -ne 0 ]; then
      echo >&2 "fatal: $0: Triggering build failed"
    fi
  done
}

while read oldrev newrev refname
do
  trigger_build $newrev $refname
done
